# Demo
# Written by: Kristina Miller
import numpy as np
import pypoman as ppm
import matplotlib.pyplot as plt

def problem():
    A_rect = np.array([[-1,0],
                       [1,0],
                       [0,-1],
                       [0,1]])

    b1 = np.array([[0], [9], [0], [9]])
    b2 = np.array([[-27], [33], [0], [9]])
    b3 = np.array([[-51], [57], [0], [9]])
    b4 = np.array([[-63], [69], [0], [9]])
    b5 = np.array([[-75], [81], [0], [9]])
    
    # b3 = np.array([[-0], [9], [-15], [21]])
    b6 = np.array([[-15], [21], [-15], [21]])
    b7 = np.array([[-27], [33], [-15], [21]])
    b8 = np.array([[-39], [45], [-15], [21]])
    b9 = np.array([[-51], [57], [-15], [21]])
    b10 = np.array([[-63], [69], [-15], [21]])
    b11 = np.array([[-75], [81], [-15], [21]])
    b12 = np.array([[-87], [93], [-15], [21]])
    
    b13 = np.array([[-0], [9], [-27], [33]])
    b14 = np.array([[-15], [21], [-27], [33]])
    b15 = np.array([[- 27], [33], [-27], [33]])
    b16 = np.array([[-39], [45], [-27], [33]])
    b17 = np.array([[-51], [57], [-27], [33]])
    b18 = np.array([[-75], [81], [-27], [33]])
    b19 = np.array([[-87], [93], [-27], [33]])
    
    b20 = np.array([[-15], [21], [-39], [45]])
    b21 = np.array([[-27], [33], [-39], [45]])
    b22 = np.array([[-51], [57], [-39], [45]])
    b23 = np.array([[-63], [69], [-39], [45]])
    b24 = np.array([[-75], [81], [-39], [45]])
    b25 = np.array([[-87], [93], [-39], [45]])
    
    b26 = np.array([[-0], [9], [-51], [57]])
    b27 = np.array([[-15], [21], [-51], [57]])
    b28 = np.array([[-27], [33], [-51], [57]])
    b29 = np.array([[-39], [45], [-51], [57]])
    b30 = np.array([[-51], [57], [-51], [57]])
    b31 = np.array([[-63], [69], [-51], [57]])
    b32 = np.array([[-75], [81], [-51], [57]])
    b33 = np.array([[-87], [93], [-51], [57]])
    
    b34 = np.array([[-0], [9], [-63], [69]])
    b35 = np.array([[-15], [21], [-63], [69]])
    b36 = np.array([[-39], [45], [-63], [69]])
    b37 = np.array([[-51], [57], [-63], [69]])
    b38 = np.array([[-75], [81], [-63], [69]])
    b39 = np.array([[-87], [93], [-63], [69]])
    
    b40 = np.array([[-0], [9], [-75], [81]])
    b41 = np.array([[-15], [21], [-75], [81]])
    b42 = np.array([[-27], [33], [-75], [81]])
    b43 = np.array([[-39], [45], [-75], [81]])
    b44 = np.array([[-51], [57], [-75], [81]])
    b45 = np.array([[-63], [69], [-75], [81]])
    b46 = np.array([[-75], [81], [-75], [81]])
    b47 = np.array([[-87], [93], [-75], [81]])
    
    b48 = np.array([[-15], [21], [-87], [93]])
    b49 = np.array([[-27], [33], [-87], [93]])
    b50 = np.array([[-39], [45], [-87], [93]])
    b51 = np.array([[-51], [57], [-87], [93]])
    b52 = np.array([[-63], [69], [-87], [93]])
    b53 = np.array([[-75], [81], [-87], [93]])

    b54 = np.array([[-27],[33],[0],[21]])
    b55 = np.array([[-75],[81],[0],[33]])
    b56 = np.array([[-15],[21],[-15],[33]])
    b57 = np.array([[-39],[57],[-15],[33]])
    b58 = np.array([[0],[21],[-27],[33]])
    b59 = np.array([[-27],[33],[-27],[57]])
    b60 = np.array([[-75],[93],[-39],[45]])
    b61 = np.array([[0],[21],[-51],[57]])
    b62 = np.array([[-27],[45],[-51],[57]])
    b63 = np.array([[-51],[57],[-51],[69]])
    b64 = np.array([[-51],[69],[-51],[57]])
    b65 = np.array([[-15],[21],[-63],[81]])
    b66 = np.array([[-39],[57],[-63],[93]])
    b67 = np.array([[0],[21],[-75],[81]])
    b68 = np.array([[-27],[33],[-75],[93]])
    b69 = np.array([[-63],[69],[-75],[93]])
    b70 = np.array([[-75],[93],[-75],[81]])
    b71 = np.array([[-15],[33],[-39],[45]])
    b72 = np.array([[-51],[57],[-0],[45]])

    b73 = np.array([[-99],[105],[-0],[9]])
    b74 = np.array([[-99],[105],[-15],[21]])
    b75 = np.array([[-111],[120],[-15],[21]])
    b76 = np.array([[-99],[105],[-27],[33]])
    b77 = np.array([[-111],[120],[-27],[33]])
    b78 = np.array([[-99],[105],[-39],[45]])
    b79 = np.array([[-99],[105],[-51],[57]])
    b80 = np.array([[-111],[120],[-51],[57]])
    b81 = np.array([[-99],[105],[-63],[69]])
    b82 = np.array([[-111],[120],[-63],[69]])
    b83 = np.array([[-99],[105],[-75],[81]])
    b84 = np.array([[-99],[105],[-87],[93]])
    b85 = np.array([[-111],[120],[-87],[93]])

    b86 = np.array([[-0],[9],[-99],[105]])
    b87 = np.array([[-15],[21],[-99],[105]])
    b88 = np.array([[-15],[21],[-111],[120]])
    b89 = np.array([[-27],[33],[-99],[105]])
    b90 = np.array([[-27],[33],[-111],[120]])
    b91 = np.array([[-39],[45],[-99],[105]])
    b92 = np.array([[-51],[57],[-99],[105]])
    b93 = np.array([[-51],[57],[-111],[120]])
    b94 = np.array([[-63],[69],[-99],[105]])
    b95 = np.array([[-63],[69],[-111],[120]])
    b96 = np.array([[-75],[81],[-99],[105]])
    b97 = np.array([[-87],[93],[-99],[105]])
    b98 = np.array([[-87],[93],[-111],[120]])
    b99 = np.array([[-99],[105],[-99],[105]])
    b100 = np.array([[-99],[105],[-111],[120]])
    b101 = np.array([[-111],[120],[-99],[105]])
    
    b102 = np.array([[-15],[33],[-99],[120]])
    b103 = np.array([[-27],[57],[-99],[105]])
    b104 = np.array([[-63],[69],[-99],[120]])
    b105 = np.array([[-63],[93],[-99],[105]])
    b106 = np.array([[-99],[105],[-99],[120]])
    b107 = np.array([[-99],[120],[-87],[93]])
    b108 = np.array([[-99],[105],[-63],[93]])
    b109 = np.array([[-99],[120],[-51],[57]])
    b110 = np.array([[-87],[93],[-51],[81]])
    b111 = np.array([[-99],[105],[-39],[57]])
    b112 = np.array([[-87],[105],[-15],[33]])
    b113 = np.array([[-99],[105],[-0],[33]])
    b114 = np.array([[-39],[45],[-87],[105]])
    b115 = np.array([[-51],[69],[-87],[93]])
    b116 = np.array([[-75],[81],[-87],[105]])
    b117 = np.array([[-63],[69],[-39],[57]])
    b118 = np.array([[-75],[81],[-27],[45]])

    b1_1 = np.array([[-120-00], [120+9], [0], [9]])
    b1_2 = np.array([[-120-27], [120+33], [0], [9]])
    b1_3 = np.array([[-120-51], [120+57], [0], [9]])
    b1_4 = np.array([[-120-63], [120+69], [0], [9]])
    b1_5 = np.array([[-120-75], [120+81], [0], [9]])
    
    # b3 = np.array([[-120-0], [9120+], [-15], [21]])
    b1_6 = np.array([[-120-15], [120+21], [-15], [21]])
    b1_7 = np.array([[-120-27], [120+33], [-15], [21]])
    b1_8 = np.array([[-120-39], [120+45], [-15], [21]])
    b1_9 = np.array([[-120-51], [120+57], [-15], [21]])
    b1_10 = np.array([[-120-63], [120+69], [-15], [21]])
    b1_11 = np.array([[-120-75], [120+81], [-15], [21]])
    b1_12 = np.array([[-120-87], [120+93], [-15], [21]])
    
    b1_13 = np.array([[-120-00], [120+9], [-27], [33]])
    b1_14 = np.array([[-120-15], [120+21], [-27], [33]])
    b1_15 = np.array([[-120-27], [120+33], [-27], [33]])
    b1_16 = np.array([[-120-39], [120+45], [-27], [33]])
    b1_17 = np.array([[-120-51], [120+57], [-27], [33]])
    b1_18 = np.array([[-120-75], [120+81], [-27], [33]])
    b1_19 = np.array([[-120-87], [120+93], [-27], [33]])
    
    b1_20 = np.array([[-120-15], [120+21], [-39], [45]])
    b1_21 = np.array([[-120-27], [120+33], [-39], [45]])
    b1_22 = np.array([[-120-51], [120+57], [-39], [45]])
    b1_23 = np.array([[-120-63], [120+69], [-39], [45]])
    b1_24 = np.array([[-120-75], [120+81], [-39], [45]])
    b1_25 = np.array([[-120-87], [120+93], [-39], [45]])
    
    b1_26 = np.array([[-120-00], [120+9], [-51], [57]])
    b1_27 = np.array([[-120-15], [120+21], [-51], [57]])
    b1_28 = np.array([[-120-27], [120+33], [-51], [57]])
    b1_29 = np.array([[-120-39], [120+45], [-51], [57]])
    b1_30 = np.array([[-120-51], [120+57], [-51], [57]])
    b1_31 = np.array([[-120-63], [120+69], [-51], [57]])
    b1_32 = np.array([[-120-75], [120+81], [-51], [57]])
    b1_33 = np.array([[-120-87], [120+93], [-51], [57]])
    
    b1_34 = np.array([[-120-00], [120+9], [-63], [69]])
    b1_35 = np.array([[-120-15], [120+21], [-63], [69]])
    b1_36 = np.array([[-120-39], [120+45], [-63], [69]])
    b1_37 = np.array([[-120-51], [120+57], [-63], [69]])
    b1_38 = np.array([[-120-75], [120+81], [-63], [69]])
    b1_39 = np.array([[-120-87], [120+93], [-63], [69]])
    
    b1_40 = np.array([[-120-00], [120+9], [-75], [81]])
    b1_41 = np.array([[-120-15], [120+21], [-75], [81]])
    b1_42 = np.array([[-120-27], [120+33], [-75], [81]])
    b1_43 = np.array([[-120-39], [120+45], [-75], [81]])
    b1_44 = np.array([[-120-51], [120+57], [-75], [81]])
    b1_45 = np.array([[-120-63], [120+69], [-75], [81]])
    b1_46 = np.array([[-120-75], [120+81], [-75], [81]])
    b1_47 = np.array([[-120-87], [120+93], [-75], [81]])
    
    b1_48 = np.array([[-120-15], [120+21], [-87], [93]])
    b1_49 = np.array([[-120-27], [120+33], [-87], [93]])
    b1_50 = np.array([[-120-39], [120+45], [-87], [93]])
    b1_51 = np.array([[-120-51], [120+57], [-87], [93]])
    b1_52 = np.array([[-120-63], [120+69], [-87], [93]])
    b1_53 = np.array([[-120-75], [120+81], [-87], [93]])

    b1_54 = np.array([[-120-27],[120+33],[0],[21]])
    b1_55 = np.array([[-120-75],[120+81],[0],[33]])
    b1_56 = np.array([[-120-15],[120+21],[-15],[33]])
    b1_57 = np.array([[-120-39],[120+57],[-15],[33]])
    b1_58 = np.array([[-120-00],[120+21],[-27],[33]])
    b1_59 = np.array([[-120-27],[120+33],[-27],[57]])
    b1_60 = np.array([[-120-75],[120+93],[-39],[45]])
    b1_61 = np.array([[-120-00],[120+21],[-51],[57]])
    b1_62 = np.array([[-120-27],[120+45],[-51],[57]])
    b1_63 = np.array([[-120-51],[120+57],[-51],[69]])
    b1_64 = np.array([[-120-51],[120+69],[-51],[57]])
    b1_65 = np.array([[-120-15],[120+21],[-63],[81]])
    b1_66 = np.array([[-120-39],[120+57],[-63],[93]])
    b1_67 = np.array([[-120-00],[120+21],[-75],[81]])
    b1_68 = np.array([[-120-27],[120+33],[-75],[93]])
    b1_69 = np.array([[-120-63],[120+69],[-75],[93]])
    b1_70 = np.array([[-120-75],[120+93],[-75],[81]])
    b1_71 = np.array([[-120-15],[120+33],[-39],[45]])
    b1_72 = np.array([[-120-51],[120+57],[-0],[45]])

    b1_73 = np.array([[-120-99],[120+105],[-0],[9]])
    b1_74 = np.array([[-120-99],[120+105],[-15],[21]])
    b1_75 = np.array([[-120-111],[120+120],[-15],[21]])
    b1_76 = np.array([[-120-99],[120+105],[-27],[33]])
    b1_77 = np.array([[-120-111],[120+120],[-27],[33]])
    b1_78 = np.array([[-120-99],[120+105],[-39],[45]])
    b1_79 = np.array([[-120-99],[120+105],[-51],[57]])
    b1_80 = np.array([[-120-111],[120+120],[-51],[57]])
    b1_81 = np.array([[-120-99],[120+105],[-63],[69]])
    b1_82 = np.array([[-120-111],[120+120],[-63],[69]])
    b1_83 = np.array([[-120-99],[120+105],[-75],[81]])
    b1_84 = np.array([[-120-99],[120+105],[-87],[93]])
    b1_85 = np.array([[-120-111],[120+120],[-87],[93]])

    b1_86 = np.array([[-120-0],[120+9],[-99],[105]])
    b1_87 = np.array([[-120-15],[120+21],[-99],[105]])
    b1_88 = np.array([[-120-15],[120+21],[-111],[120]])
    b1_89 = np.array([[-120-27],[120+33],[-99],[105]])
    b1_90 = np.array([[-120-27],[120+33],[-111],[120]])
    b1_91 = np.array([[-120-39],[120+45],[-99],[105]])
    b1_92 = np.array([[-120-51],[120+57],[-99],[105]])
    b1_93 = np.array([[-120-51],[120+57],[-111],[120]])
    b1_94 = np.array([[-120-63],[120+69],[-99],[105]])
    b1_95 = np.array([[-120-63],[120+69],[-111],[120]])
    b1_96 = np.array([[-120-75],[120+81],[-99],[105]])
    b1_97 = np.array([[-120-87],[120+93],[-99],[105]])
    b1_98 = np.array([[-120-87],[120+93],[-111],[120]])
    b1_99 = np.array([[-120-99],[120+105],[-99],[105]])
    b1_100 = np.array([[-120-99],[120+105],[-111],[120]])
    b1_101 = np.array([[-120-111],[120+120],[-99],[105]])
    
    b1_102 = np.array([[-120-15],[120+33],[-99],[120]])
    b1_103 = np.array([[-120-27],[120+57],[-99],[105]])
    b1_104 = np.array([[-120-63],[120+69],[-99],[120]])
    b1_105 = np.array([[-120-63],[120+93],[-99],[105]])
    b1_106 = np.array([[-120-99],[120+105],[-99],[120]])
    b1_107 = np.array([[-120-99],[120+120],[-87],[93]])
    b1_108 = np.array([[-120-99],[120+105],[-63],[93]])
    b1_109 = np.array([[-120-99],[120+120],[-51],[57]])
    b1_110 = np.array([[-120-87],[120+93],[-51],[81]])
    b1_111 = np.array([[-120-99],[120+105],[-39],[57]])
    b1_112 = np.array([[-120-87],[120+105],[-15],[33]])
    b1_113 = np.array([[-120-99],[120+105],[-0],[33]])
    b1_114 = np.array([[-120-39],[120+45],[-87],[105]])
    b1_115 = np.array([[-120-51],[120+69],[-87],[93]])
    b1_116 = np.array([[-120-75],[120+81],[-87],[105]])
    b1_117 = np.array([[-120-63],[120+69],[-39],[57]])
    b1_118 = np.array([[-120-75],[120+81],[-27],[45]])

    # TODO: Create more obstacles

    obstacles = [(A_rect, b1),
                 (A_rect, b2),
                 (A_rect, b3),
                 (A_rect, b4),
                 (A_rect, b5),
                 (A_rect, b6),
                 (A_rect, b7),
                 (A_rect, b8),
                 (A_rect, b9),
                 (A_rect, b10),
                 (A_rect, b11),
                 (A_rect, b12),
                 (A_rect, b13),
                 (A_rect, b14),
                 (A_rect, b15),
                 (A_rect, b16),
                 (A_rect, b17),
                 (A_rect, b18),
                 (A_rect, b19),
                 (A_rect, b20),
                 (A_rect, b21),
                 (A_rect, b22),
                 (A_rect, b23),
                 (A_rect, b24),
                 (A_rect, b25),
                 (A_rect, b26),
                 (A_rect, b27),
                 (A_rect, b28),
                 (A_rect, b29),
                 (A_rect, b30),
                 (A_rect, b31),
                 (A_rect, b32),
                 (A_rect, b33),
                 (A_rect, b34),
                 (A_rect, b35),
                 (A_rect, b36),
                 (A_rect, b37),
                 (A_rect, b38),
                 (A_rect, b39),
                 (A_rect, b40),
                 (A_rect, b41),
                 (A_rect, b42),
                 (A_rect, b43),
                 (A_rect, b44),
                 (A_rect, b45),
                 (A_rect, b46),
                 (A_rect, b47),
                 (A_rect, b48),
                 (A_rect, b49),
                 (A_rect, b50),
                 (A_rect, b51),
                 (A_rect, b52),
                 (A_rect, b53),
                 (A_rect, b54),
                 (A_rect, b55),
                 (A_rect, b56),
                 (A_rect, b57),
                 (A_rect, b58),
                 (A_rect, b59),
                 (A_rect, b60),
                 (A_rect, b61),
                 (A_rect, b62),
                 (A_rect, b63),
                 (A_rect, b64),
                 (A_rect, b65),
                 (A_rect, b66),
                 (A_rect, b67),
                 (A_rect, b68),
                 (A_rect, b69),
                 (A_rect, b70),
                 (A_rect, b71),
                 (A_rect, b72),
                 (A_rect, b73),
                 (A_rect, b74),
                 (A_rect, b75),
                 (A_rect, b76),
                 (A_rect, b77),
                 (A_rect, b78),
                 (A_rect, b79),
                 (A_rect, b80),
                 (A_rect, b81),
                 (A_rect, b82),
                 (A_rect, b83),
                 (A_rect, b84),
                 (A_rect, b85),
                 (A_rect, b86),
                 (A_rect, b87),
                 (A_rect, b88),
                 (A_rect, b89),
                 (A_rect, b90),
                 (A_rect, b91),
                 (A_rect, b92),
                 (A_rect, b93),
                 (A_rect, b94),
                 (A_rect, b95),
                 (A_rect, b96),
                 (A_rect, b97),
                 (A_rect, b98),
                 (A_rect, b99),
                 (A_rect, b100),
                 (A_rect, b101),
                 (A_rect, b102),
                 (A_rect, b103),
                 (A_rect, b104),
                 (A_rect, b105),
                 (A_rect, b106),
                 (A_rect, b107),
                 (A_rect, b108),
                 (A_rect, b109),
                 (A_rect, b110),
                 (A_rect, b111),
                 (A_rect, b112),
                 (A_rect, b113),
                 (A_rect, b114),
                 (A_rect, b115),
                 (A_rect, b116),
                 (A_rect, b117),
                 (A_rect, b118),
                 (A_rect, b1_1),
                 (A_rect, b1_2),
                 (A_rect, b1_3),
                 (A_rect, b1_4),
                 (A_rect, b1_5),
                 (A_rect, b1_6),
                 (A_rect, b1_7),
                 (A_rect, b1_8),
                 (A_rect, b1_9),
                 (A_rect, b1_10),
                 (A_rect, b1_11),
                 (A_rect, b1_12),
                 (A_rect, b1_13),
                 (A_rect, b1_14),
                 (A_rect, b1_15),
                 (A_rect, b1_16),
                 (A_rect, b1_17),
                 (A_rect, b1_18),
                 (A_rect, b1_19),
                 (A_rect, b1_20),
                 (A_rect, b1_21),
                 (A_rect, b1_22),
                 (A_rect, b1_23),
                 (A_rect, b1_24),
                 (A_rect, b1_25),
                 (A_rect, b1_26),
                 (A_rect, b1_27),
                 (A_rect, b1_28),
                 (A_rect, b1_29),
                 (A_rect, b1_30),
                 (A_rect, b1_31),
                 (A_rect, b1_32),
                 (A_rect, b1_33),
                 (A_rect, b1_34),
                 (A_rect, b1_35),
                 (A_rect, b1_36),
                 (A_rect, b1_37),
                 (A_rect, b1_38),
                 (A_rect, b1_39),
                 (A_rect, b1_40),
                 (A_rect, b1_41),
                 (A_rect, b1_42),
                 (A_rect, b1_43),
                 (A_rect, b1_44),
                 (A_rect, b1_45),
                 (A_rect, b1_46),
                 (A_rect, b1_47),
                 (A_rect, b1_48),
                 (A_rect, b1_49),
                 (A_rect, b1_50),
                 (A_rect, b1_51),
                 (A_rect, b1_52),
                 (A_rect, b1_53),
                 (A_rect, b1_54),
                 (A_rect, b1_55),
                 (A_rect, b1_56),
                 (A_rect, b1_57),
                 (A_rect, b1_58),
                 (A_rect, b1_59),
                 (A_rect, b1_60),
                 (A_rect, b1_61),
                 (A_rect, b1_62),
                 (A_rect, b1_63),
                 (A_rect, b1_64),
                 (A_rect, b1_65),
                 (A_rect, b1_66),
                 (A_rect, b1_67),
                 (A_rect, b1_68),
                 (A_rect, b1_69),
                 (A_rect, b1_70),
                 (A_rect, b1_71),
                 (A_rect, b1_72),
                 (A_rect, b1_73),
                 (A_rect, b1_74),
                 (A_rect, b1_75),
                 (A_rect, b1_76),
                 (A_rect, b1_77),
                 (A_rect, b1_78),
                 (A_rect, b1_79),
                 (A_rect, b1_80),
                 (A_rect, b1_81),
                 (A_rect, b1_82),
                 (A_rect, b1_83),
                 (A_rect, b1_84),
                 (A_rect, b1_85),
                 (A_rect, b1_86),
                 (A_rect, b1_87),
                 (A_rect, b1_88),
                 (A_rect, b1_89),
                 (A_rect, b1_90),
                 (A_rect, b1_91),
                 (A_rect, b1_92),
                 (A_rect, b1_93),
                 (A_rect, b1_94),
                 (A_rect, b1_95),
                 (A_rect, b1_96),
                 (A_rect, b1_97),
                 (A_rect, b1_98),
                 (A_rect, b1_99),
                 (A_rect, b1_100),
                 (A_rect, b1_101),
                 (A_rect, b1_102),
                 (A_rect, b1_103),
                 (A_rect, b1_104),
                 (A_rect, b1_105),
                 (A_rect, b1_106),
                 (A_rect, b1_107),
                 (A_rect, b1_108),
                 (A_rect, b1_109),
                 (A_rect, b1_110),
                 (A_rect, b1_111),
                 (A_rect, b1_112),
                 (A_rect, b1_113),
                 (A_rect, b1_114),
                 (A_rect, b1_115),
                 (A_rect, b1_116),
                 (A_rect, b1_117),
                 (A_rect, b1_118)]

    #TODO: Create initial set
    b0 = np.array([[-5.5], [6.5], [-41.5], [42.5]])
    Theta = (A_rect, b0)
    #TODO: Create goal set
    bg1 = np.array([[-15], [21], [-3], [9]])
    bg2 = np.array([[-39], [45], [-3], [9]])
    bg3 = np.array([[-87], [93], [-3], [9]])
    bg4 = np.array([[-3], [9], [-15], [21]])
    bg5 = np.array([[-63], [69], [-27], [33]])
    bg6 = np.array([[-39], [45], [-39], [45]])
    bg7 = np.array([[-27], [33], [-63], [69]])
    bg8 = np.array([[-63], [69], [-63], [69]])
    bg9 = np.array([[-3], [9], [-87], [93]])
    bg10 = np.array([[-87], [93], [-87], [93]])
    bg11 = np.array([[-111], [117], [-3], [9]])
    bg12 = np.array([[-111], [117], [-39], [45]])
    bg13 = np.array([[-111], [117], [-75], [81]])
    bg14 = np.array([[-3], [9], [-111], [117]])
    bg15 = np.array([[-39], [45], [-111], [117]])
    bg16 = np.array([[-75], [81], [-111], [117]])
    bg17 = np.array([[-111], [117], [-111], [117]])

    bg1_1 = np.array([[-120-15],  [120+21], [-3], [9]])
    bg1_2 = np.array([[-120-39],  [120+45], [-3], [9]])
    bg1_3 = np.array([[-120-87],  [120+93], [-3], [9]])
    bg1_4 = np.array([[-120-3],   [120+9], [-15], [21]])
    bg1_5 = np.array([[-120-63],  [120+69], [-27], [33]])
    bg1_6 = np.array([[-120-39],  [120+45], [-39], [45]])
    bg1_7 = np.array([[-120-27],  [120+33], [-63], [69]])
    bg1_8 = np.array([[-120-63],  [120+69], [-63], [69]])
    bg1_9 = np.array([[-120-3],   [120+9], [-87], [93]])
    bg1_10 = np.array([[-120-87],  [120+93], [-87], [93]])
    bg1_11 = np.array([[-120-111], [120+117], [-3], [9]])
    bg1_12 = np.array([[-120-111], [120+117], [-39], [45]])
    bg1_13 = np.array([[-120-111], [120+117], [-75], [81]])
    bg1_14 = np.array([[-120-3],   [120+9], [-111], [117]])
    bg1_15 = np.array([[-120-39],  [120+45], [-111], [117]])
    bg1_16 = np.array([[-120-75],  [120+81], [-111], [117]])
    bg1_17 = np.array([[-120-111], [120+117], [-111], [117]])
    goal = [(A_rect, bg1),
            (A_rect, bg2),
            (A_rect, bg3),
            (A_rect, bg4),
            (A_rect, bg5),
            (A_rect, bg6),
            (A_rect, bg7),
            (A_rect, bg8),
            (A_rect, bg9),
            (A_rect, bg10),
            (A_rect, bg11),
            (A_rect, bg12),
            (A_rect, bg13),
            (A_rect, bg14),
            (A_rect, bg15),
            (A_rect, bg16),
            (A_rect, bg17),
            (A_rect, bg1_1),
            (A_rect, bg1_2),
            (A_rect, bg1_3),
            (A_rect, bg1_4),
            (A_rect, bg1_5),
            (A_rect, bg1_6),
            (A_rect, bg1_7),
            (A_rect, bg1_8),
            (A_rect, bg1_9),
            (A_rect, bg1_10),
            (A_rect, bg1_11),
            (A_rect, bg1_12),
            (A_rect, bg1_13),
            (A_rect, bg1_14),
            (A_rect, bg1_15),
            (A_rect, bg1_16),
            (A_rect, bg1_17)]
    return obstacles , Theta, goal

if __name__ == '__main__':
    obs, Theta, goal = problem()

    for A,b in obs:
        ppm.polygon.plot_polygon(ppm.duality.compute_polytope_vertices(A,b), color = 'red')

    for A,b in goal:
        ppm.polygon.plot_polygon(ppm.duality.compute_polytope_vertices(A,b), color = 'green')

    ppm.polygon.plot_polygon(ppm.duality.compute_polytope_vertices(Theta[0],Theta[1]), color = 'blue')
    plt.xlim(0, 240)
    plt.ylim(0, 120)
    plt.grid()
    plt.show()
